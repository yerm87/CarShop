{"version":3,"file":"js/15.js","sources":["webpack:///./src/containers/update_listing/UpdateListing.css","webpack:///./src/containers/update_listing/UpdateListing.css?3354","webpack:///src/containers/update_listing/UpdateListing.js","webpack:///src/urlsAPI/urlsAPI.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".UpdateListing__wrapperListing__3kB14 {\\r\\n    background-color: var(--mainWhite);\\r\\n    padding: 100px 0 40px 70px;\\r\\n    font-family: 'Montserrat';\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n.UpdateListing__wrapperListing__3kB14 p {\\r\\n    color: var(--mainRed);\\r\\n}\\r\\n\\r\\n.UpdateListing__wrapperListing__3kB14 h1 {\\r\\n    margin: 0;\\r\\n    color: var(--mainBlue);\\r\\n}\\r\\n\\r\\n.UpdateListing__drop__365Fh {\\r\\n    padding: 90px;\\r\\n    border: 3px dashed rgb(175, 155, 155);\\r\\n    width: 60%;\\r\\n    margin: 20px 0;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.UpdateListing__image__34YNz {\\r\\n    border-radius: 8px;\\r\\n    border: 1px solid gray;\\r\\n    padding: 6px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.UpdateListing__image__34YNz img {\\r\\n    max-width: 110px;\\r\\n    max-height: 70px;\\r\\n}\\r\\n\\r\\n.UpdateListing__images__ebQz1 {\\r\\n    display: grid;\\r\\n    width: 60%;\\r\\n    -webkit-box-sizing: border-box;\\r\\n            box-sizing: border-box;\\r\\n    grid-template-columns: 1fr 1fr 1fr 1fr;\\r\\n    grid-column-gap: 14px;\\r\\n    grid-row-gap: 14px;\\r\\n}\\r\\n\\r\\n.UpdateListing__inputs__2fVWq {\\r\\n    font-family: 'Rubik';\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.UpdateListing__inputs__2fVWq label, .UpdateListing__inputs__2fVWq input {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.UpdateListing__inputs__2fVWq label {\\r\\n    padding: 8px 0 5px 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.UpdateListing__inputs__2fVWq input {\\r\\n    width: 100%;\\r\\n    border-radius: 8px;\\r\\n    \\r\\n    font-size: 1.1em;\\r\\n    padding-left: 10px;\\r\\n    -webkit-box-sizing: border-box;\\r\\n            box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.UpdateListing__inputs__2fVWq p {\\r\\n    color: var(--mainRed);\\r\\n}\\r\\n\\r\\n.UpdateListing__vehicleInfo__23WRz {\\r\\n    padding-bottom: 40px;\\r\\n    border-bottom: 1px solid gray;\\r\\n}\\r\\n\\r\\n.UpdateListing__contactData__3Mixb h2 {\\r\\n    color: var(--mainBlue);\\r\\n}\\r\\n\\r\\n.UpdateListing__image__34YNz img {\\r\\n    max-width: 110px;\\r\\n    max-height: 70px;\\r\\n}\\r\\n\\r\\n.UpdateListing__imageWrapper__pUFuo {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.UpdateListing__deleteButton__3N5qw {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    width: 19px;\\r\\n    height: 19px;\\r\\n    top: 5px;\\r\\n    right: 5px;\\r\\n    background-color: var(--mainRed);\\r\\n    color: var(--mainWhite);\\r\\n    font-weight: bold;\\r\\n    border-radius: 14px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.UpdateListing__image__34YNz:hover .UpdateListing__deleteButton__3N5qw {\\r\\n    display: block;\\r\\n}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"wrapperListing\": \"UpdateListing__wrapperListing__3kB14\",\n\t\"drop\": \"UpdateListing__drop__365Fh\",\n\t\"image\": \"UpdateListing__image__34YNz\",\n\t\"images\": \"UpdateListing__images__ebQz1\",\n\t\"inputs\": \"UpdateListing__inputs__2fVWq\",\n\t\"vehicleInfo\": \"UpdateListing__vehicleInfo__23WRz\",\n\t\"contactData\": \"UpdateListing__contactData__3Mixb\",\n\t\"imageWrapper\": \"UpdateListing__imageWrapper__pUFuo\",\n\t\"deleteButton\": \"UpdateListing__deleteButton__3N5qw\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js??postcss!./UpdateListing.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar id = \"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js??postcss!./UpdateListing.css\";\nvar update = api(id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport classes from './UpdateListing.css';\r\nimport Input from '../../components/UIElements/inputs/Inputs';\r\nimport Dropzone from 'react-dropzone';\r\nimport Spinner from '../../components/UIElements/spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { proxy, zipAPIKey } from '../../urlsAPI/urlsAPI';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UpdateListing extends Component {\r\n    state={\r\n        elements: {\r\n            year: {\r\n                type: 'year',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            make: {\r\n                type: 'make',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            model: {\r\n                type: 'model',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            bodyStyle: {\r\n                type: 'bodyStyle',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            transmission: {\r\n                type: 'transmission',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            exteriorColor: {\r\n                type: 'exteriorColor',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            interiorColor: {\r\n                type: 'interiorColor',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            numberOfDoors: {\r\n                type: 'numberOfDoors',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            fuelType: {\r\n                type: 'fuelType',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            condition: {\r\n                type: 'condition',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            cityMPG: {\r\n                type: 'cityMPG',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            highwayMPG: {\r\n                type: 'highwayMPG',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            },\r\n            engine: {\r\n                type: 'engine',\r\n                value: [],\r\n                active: true,\r\n                valid: true,\r\n                clicked: false,\r\n                data: ''\r\n            }\r\n        },\r\n        inputs: {\r\n            price: {\r\n                type: 'price',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            mileage: {\r\n                type: 'mileage',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            description: {\r\n                type: 'description',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: false\r\n                }\r\n            },\r\n            firstName: {\r\n                type: 'firstName',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            lastName: {\r\n                type: 'lastName',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            email: {\r\n                type: 'email',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            phoneNumber: {\r\n                type: 'phoneNumber',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            city: {\r\n                type: 'city',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            },\r\n            zip: {\r\n                type: 'zip',\r\n                value: '',\r\n                valid: true,\r\n                touched: true,\r\n                errorMessage: '',\r\n                rules: {\r\n                    required: true\r\n                }\r\n            }\r\n        },\r\n        images: [],\r\n        formIsValid: true,\r\n        loading: false,\r\n        formSubmitted: false,\r\n        options: []\r\n    }\r\n    componentWillMount(){\r\n        \r\n        const listingId = this.props.match.params.listingId;\r\n        axios.get(`/data_listing?listingId=${listingId}`).then(response => {\r\n            const arrayOfParams = response.data.parameters;\r\n\r\n            const copyElements = {\r\n                ...this.state.elements\r\n            }\r\n\r\n            arrayOfParams.forEach(current => {\r\n                if(current.type === 'model'){\r\n                    const make = response.data.make;\r\n                    copyElements['model'].value = current.values[make];\r\n                } else {\r\n                    copyElements[current.type].value = current.values;\r\n                }\r\n            });\r\n\r\n            const arrayOfTypes = [];\r\n            for(let prop in this.state.elements){\r\n                arrayOfTypes.push(prop);\r\n            }\r\n\r\n            arrayOfTypes.forEach(element => {\r\n                copyElements[element].data = response.data[element];\r\n            });\r\n\r\n            const copyInputs = {\r\n                ...this.state.inputs\r\n            }\r\n\r\n            const arrayOfInputs = [];\r\n\r\n            for(let prop in this.state.inputs){\r\n                arrayOfInputs.push(prop);\r\n            }\r\n\r\n            arrayOfInputs.forEach(current => {\r\n                copyInputs[current].value = response.data[current];\r\n            });\r\n\r\n            this.setState({\r\n                elements: copyElements,\r\n                inputs: copyInputs\r\n            })\r\n        })\r\n    }           \r\n\r\n    getOptionsForRender = (element) => {\r\n\r\n        const options = element.value.map(current => {\r\n            return <option value={current}>{current}</option>\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    onChangeHandler = (event, current) => {\r\n        const value = event.target.value;\r\n\r\n        const copyElements = {\r\n            ...this.state.elements\r\n        }\r\n\r\n        copyElements[current.type].data = event.target.value;\r\n\r\n        if(value === 'select'){\r\n            copyElements[current.type].valid = false;\r\n        } else {\r\n            copyElements[current.type].valid = true;\r\n        }\r\n\r\n        const arrayOfValues = [];\r\n        for(let prop in this.state.elements){\r\n            arrayOfValues.push(prop);\r\n        }\r\n\r\n        const index = arrayOfValues.findIndex((element) => element === current.type);\r\n        const nextElement = arrayOfValues[index+1];\r\n\r\n        const element = arrayOfValues[index];\r\n        if(element === arrayOfValues[arrayOfValues.length-1]){\r\n            return;\r\n        } else {\r\n    \r\n            axios.post(`/get_${nextElement}`, {\r\n                type: nextElement,\r\n                params: value\r\n            }).then(response => {\r\n                if(response.data !== ''){\r\n                    copyElements[nextElement].value = response.data;\r\n                    copyElements[nextElement].active = true;\r\n                } else if(response.data === '') {\r\n                    const shortArray = arrayOfValues.slice(index+1);\r\n                    \r\n                    shortArray.forEach(element => {\r\n                        copyElements[element].active = false;\r\n                        copyElements[element].value = [];\r\n                        copyElements[element].valid = false;\r\n                        copyElements[element].data = '';\r\n                    });\r\n                }\r\n    \r\n                this.setState({\r\n                    elements: copyElements\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteImage = (items, item) => {\r\n        const index = items.findIndex(current => current === item);\r\n        const copyImages = this.state.images;\r\n\r\n        copyImages.splice(index, 1);\r\n\r\n        this.setState({\r\n            images: copyImages\r\n        })\r\n    }\r\n\r\n    onDrop = (acceptedFiles) => {\r\n        let files = this.state.images;\r\n\r\n        for(let i=0; i<acceptedFiles.length; i++){\r\n            files.push(acceptedFiles[i]);\r\n        }\r\n\r\n        this.setState({\r\n            images: files\r\n        }, () => {\r\n            console.log(this.state.images);\r\n        });\r\n    }\r\n\r\n    validateData = (element) => {\r\n        const copyInputs = {\r\n            ...this.state.inputs\r\n        }\r\n\r\n        let valid = false;\r\n\r\n        if(element.type !== 'description'){\r\n            if(element.value.trim() !== '' && element.rules.required){\r\n                valid = true;\r\n            }\r\n        }\r\n\r\n        if(valid){\r\n            copyInputs[element.type].valid = true;\r\n            copyInputs[element.type].errorMessage = '';\r\n        } else if(!element.rules.required && !valid){\r\n            copyInputs[element.type].valid = true; \r\n        } else {\r\n            copyInputs[element.type].valid = false;\r\n            copyInputs[element.type].errorMessage = 'Field cannot be empty';\r\n        }\r\n\r\n        if(element.type === 'phoneNumber' && !/\\(\\d{3}\\)-\\d{3}-\\d{4}/.test(element.value) && valid){\r\n            copyInputs[element.type].valid = false;\r\n            copyInputs[element.type].errorMessage = 'does not match valid format: (000)-000-0000'\r\n        }\r\n\r\n        if(element.type === 'zip' && valid && element.value.length !== 5){\r\n            copyInputs[element.type].valid = false;\r\n            copyInputs[element.type].errorMessage = 'Field should have 5 digits';\r\n        } else if(element.type === 'zip' && valid && element.value.length === 5){\r\n            copyInputs[element.type].valid = true;\r\n            copyInputs[element.type].errorMessage = '';\r\n        }\r\n\r\n        if(element.type === 'zip' && valid && copyInputs['city'].value !== '' && \r\n        element.value.length === 5){\r\n            axios.get(`${proxy}https://www.zipcodeapi.com/rest/${zipAPIKey}/info.json/${element.value}/radians`)\r\n            .then(response => {\r\n                let city = copyInputs['city'].value;\r\n                let index = city.indexOf(',');\r\n                city = city.slice(0, index);\r\n\r\n                if(response.data.city !== city){\r\n                    copyInputs[element.type].valid = false;\r\n                    copyInputs[element.type].errorMessage = 'invalid zip code for this location';\r\n\r\n                    this.setState({\r\n                        inputs: copyInputs\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if(element.type === 'city' && valid && !/^[a-zA-Z\\s]+,\\s[a-zA-Z\\s]+$/.test(element.value)){\r\n            copyInputs[element.type].valid = false;\r\n            copyInputs[element.type].errorMessage = 'does not match valid format: \"Denver, Colorado\"';\r\n        }\r\n\r\n        this.setState({\r\n            inputs: copyInputs\r\n        });\r\n    }\r\n\r\n    onBlurHandler = (element) => {\r\n        this.validateData(element);\r\n    }\r\n\r\n    onChangeInput = (event, currentElement) => {\r\n        \r\n        const copyInputs = {\r\n            ...this.state.inputs\r\n        }\r\n        copyInputs[currentElement.type].touched = true;\r\n        \r\n        if(currentElement.type === 'phoneNumber'){\r\n            \r\n            if(/^[\\(]*[0-9]*[\\)]*[-]*\\d*[-]*\\d*$/.test(event.target.value)){\r\n                copyInputs[currentElement.type].value = event.target.value;\r\n\r\n                if(event.target.value.length === 3){\r\n                    copyInputs[currentElement.type].value = `(${event.target.value})-`\r\n                } else if(event.target.value.length === 9){\r\n                    copyInputs[currentElement.type].value = `${event.target.value}-`\r\n                } else if(event.target.value.length === 15){\r\n                    copyInputs[currentElement.type].value=\r\n                    copyInputs[currentElement.type].value\r\n                    .slice(0, copyInputs[currentElement.type].value.length-1);\r\n                    return;\r\n                } else if(event.target.value.length === 10 || event.target.value.length === 5){\r\n                    copyInputs[currentElement.type].value = '';\r\n                }\r\n            } else {\r\n                copyInputs[currentElement.type].value = '';\r\n            }\r\n        } else if(currentElement.type === 'price' || currentElement.type === 'mileage'){\r\n            if(/^\\d*[,]*\\d*$/.test(event.target.value)){\r\n                copyInputs[currentElement.type].value = event.target.value;\r\n                \r\n                let firstVal;\r\n                let secondVal;\r\n                let fullNumber;\r\n\r\n                if(event.target.value.length === 4){\r\n                    firstVal = event.target.value.slice(0, 1);\r\n                    secondVal = event.target.value.slice(1);\r\n                    copyInputs[currentElement.type].value = `${firstVal},${secondVal}`;\r\n                } else if(event.target.value.length === 6){\r\n                    firstVal = event.target.value.slice(0, 1);\r\n                    secondVal = event.target.value.slice(2, 6);\r\n                    fullNumber = `${firstVal}${secondVal}`;\r\n                    copyInputs[currentElement.type].value = `${fullNumber.slice(0, 2)},${fullNumber.slice(2)}`;\r\n                } else if(event.target.value.length === 7){\r\n                    firstVal = event.target.value.slice(0, 2);\r\n                    secondVal = event.target.value.slice(3, 7);\r\n                    fullNumber = `${firstVal}${secondVal}`;\r\n                    copyInputs[currentElement.type].value = `${fullNumber.slice(0, 3)},${fullNumber.slice(3)}`;\r\n                } else if(event.target.value.length === 8) {\r\n                    copyInputs[currentElement.type].value = event.target.value.slice(0, event.target.length-2);\r\n                }\r\n            } else {\r\n                copyInputs[currentElement.type].value = '';\r\n            }\r\n        } else if(currentElement.type === 'zip'){\r\n            copyInputs[currentElement.type].value = event.target.value;\r\n            if(event.target.value.length === 6){\r\n                copyInputs[currentElement.type].value=\r\n                copyInputs[currentElement.type].value.slice(0, copyInputs[currentElement.type].value.length-1);\r\n                return;\r\n            }\r\n        } else if(currentElement.type === 'firstName' || currentElement.type === 'lastName'){\r\n            if(/^[a-zA-Z]*$/.test(event.target.value)){\r\n                copyInputs[currentElement.type].value = event.target.value;\r\n            }\r\n        } else if(currentElement.type === 'city'){\r\n            copyInputs[currentElement.type].value = event.target.value;\r\n\r\n            copyInputs['zip'].value = '';\r\n            copyInputs['zip'].touched = false;\r\n            copyInputs['zip'].valid = false;\r\n            copyInputs['zip'].errorMessage = '';\r\n        } else {\r\n            copyInputs[currentElement.type].value = event.target.value;\r\n        }\r\n\r\n        this.setState({\r\n            inputs: copyInputs\r\n        });\r\n    }\r\n\r\n    onKeyDownHandler = (event, currentElement) => {\r\n        const copyElements = {\r\n            ...this.state.inputs\r\n        }\r\n        if(event.keyCode === 8){\r\n            copyElements[currentElement.type].value = '';\r\n        }\r\n\r\n        this.setState({\r\n            inputs: copyElements\r\n        });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const valid = this.validateForm();\r\n\r\n        const arrayOfElements = [];\r\n\r\n        const copyElements = {\r\n            ...this.state.elements\r\n        }\r\n\r\n        for(let prop in copyElements){\r\n            arrayOfElements.push(copyElements[prop]);\r\n        }\r\n\r\n        arrayOfElements.forEach(element => {\r\n            copyElements[element.type].clicked = true;\r\n        })\r\n\r\n        const copyInputs = {\r\n            ...this.state.inputs\r\n        }\r\n\r\n        const arrayOfInputs = [];\r\n\r\n        for(let input in copyInputs){\r\n            arrayOfInputs.push(copyInputs[input]);\r\n        }\r\n\r\n        arrayOfInputs.forEach(element => {\r\n            copyInputs[element.type].touched = true;\r\n            this.validateData(element);\r\n        })\r\n\r\n        this.setState({\r\n            elements: copyElements,\r\n            inputs: copyInputs\r\n        }, () => {\r\n            const inputs = {\r\n                ...this.state.inputs\r\n            }\r\n            const arrayInputs = [];\r\n\r\n            for(let prop in inputs){\r\n                arrayInputs.push(inputs[prop]);\r\n            }\r\n\r\n            arrayInputs.forEach(element => {\r\n                if(element.type !== 'city'){\r\n                    const index = element.value.indexOf(',');\r\n                    inputs[element.type].value = element.value.replace(element.value.charAt(index), '');\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                inputs: inputs\r\n            }, () => {\r\n                if(valid){\r\n                    const fd = new FormData();\r\n\r\n                    const elementsArray = [];\r\n                    for(let prop in this.state.elements){\r\n                        elementsArray.push(this.state.elements[prop]);\r\n                    }\r\n\r\n                    elementsArray.forEach(element => {\r\n                        fd.append(element.type, element.data);\r\n                    });\r\n\r\n                    const inputsArray = [];\r\n                    for(let prop in this.state.inputs){\r\n                        inputsArray.push(this.state.inputs[prop]);\r\n                    }\r\n\r\n                    inputsArray.forEach(element => {\r\n                        fd.append(element.type, element.value);\r\n                    });\r\n        \r\n                    for(let i=0; i<this.state.images.length; i++){\r\n                        fd.append('images[]', this.state.images[i]);\r\n                    }\r\n\r\n                    fd.append('_id', this.props.match.params.listingId);\r\n        \r\n                    this.setState({\r\n                        loading: true\r\n                    })\r\n        \r\n                    axios.post('/update_listing', fd).then(response => {\r\n                        this.setState({\r\n                            loading: false,\r\n                            formSubmitted: true\r\n                        })\r\n                    });\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    validateForm = () => {\r\n        const elements = [];\r\n\r\n        for(let prop in this.state.elements){\r\n            elements.push(this.state.elements[prop]);\r\n        }\r\n        \r\n        for(let input in this.state.inputs){\r\n            elements.push(this.state.inputs[input]);\r\n        }\r\n\r\n        const valids = elements.map(current => current.valid);\r\n\r\n        if(valids.includes(false)){\r\n            this.setState({\r\n                formIsValid: false\r\n            });\r\n\r\n            return false;\r\n        } else {\r\n            this.setState({\r\n                formIsValid: true\r\n            })\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onKeyUpHandler = (param) => {\r\n        axios.post('/get_certain_cities', {\r\n            value: param \r\n        }).then(response => {\r\n            const options = response.data.slice(0, 5);\r\n\r\n            this.setState({\r\n                options: options\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const arrayOfElements = [];\r\n\r\n        for(let prop in this.state.elements){\r\n            arrayOfElements.push(this.state.elements[prop]);\r\n        }\r\n        const selects = arrayOfElements.map(element => { \r\n            return (\r\n                <Input element={element.type}\r\n                       invalid={!element.active}\r\n                       selectValid={element.valid}\r\n                       clicked={element.clicked}\r\n                       value={element.data}\r\n                       onChangeHandler={(event) => this.onChangeHandler(event, element)}>\r\n                           {this.getOptionsForRender(element)}</Input>\r\n            )\r\n        });\r\n\r\n        const urls = this.state.images.map(current => {\r\n            return URL.createObjectURL(current);\r\n        })\r\n\r\n        const images = urls.map(current => (\r\n            <div className={classes.image}>\r\n                <div className={classes.imageWrapper}\r\n                     onClick={() => this.deleteImage(urls, current)}>\r\n                    <img src={current} />\r\n                    <div className={classes.deleteButton}>X</div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        const arrayOfInputs = [];\r\n\r\n        for(let param in this.state.inputs){\r\n            arrayOfInputs.push(this.state.inputs[param]);\r\n        }\r\n\r\n        const options = this.state.options.map(option => {\r\n            return <option value={`${option.city}, ${option.state}`}></option>\r\n        })\r\n\r\n        const inputs = arrayOfInputs.map(current => (\r\n            <Input element={current.type}\r\n                   value={current.value}\r\n                   valid={current.valid}\r\n                   touched={current.touched}\r\n                   error={current.errorMessage}\r\n                   onChangeHandler={(event) => this.onChangeInput(event, current)}\r\n                   onBlurHandler={() => this.onBlurHandler(current)}\r\n                   onKeyDownHandler={(event) => this.onKeyDownHandler(event, current)}\r\n                   onKeyUpHandler={() => this.onKeyUpHandler(current.value)}\r\n                   options={options} />\r\n        ))\r\n\r\n        const contactData = inputs.slice(3);\r\n\r\n        let component = (\r\n            <form method=\"post\" encType=\"multipart/form-data\"\r\n                  onSubmit={(event) => this.onSubmitHandler(event)}>\r\n                <div className={classes.wrapperListing}>\r\n                    <div className={classes.vehicleInfo}>\r\n                        <h1>Vehicle Information</h1>\r\n                        {selects}\r\n                        <div className={classes.inputs}>\r\n                            {inputs[0]}\r\n                            {inputs[1]}\r\n                        </div>\r\n                        <Dropzone onDrop={this.onDrop}>\r\n                            {({getRootProps, getInputProps}) => (\r\n                            <div className={classes.drop} {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                Drop photos here\r\n                            </div>\r\n                            )}\r\n                        </Dropzone>\r\n                        <div className={classes.images}>\r\n                            {images}\r\n                        </div>\r\n                        {inputs[2]}\r\n                    </div>\r\n                    <div className={classes.contactData}>\r\n                        <h2>Contact Information</h2>\r\n                        <div className={classes.inputs}>\r\n                            {contactData}\r\n                        </div>\r\n                    </div>\r\n                    <Input element=\"updateListing\" />\r\n                    {!this.state.formIsValid ? <p>Selected fields must be filled</p>: null}\r\n                </div>\r\n            </form>\r\n        )\r\n\r\n        if(this.state.formSubmitted){\r\n            component = <Redirect to=\"/sell_car\" />\r\n        }\r\n\r\n        if(this.state.loading){\r\n            component = (\r\n                <div style={{paddingTop: '80px',\r\n                             minHeight: '450px'}}>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return component;\r\n    }\r\n}\r\n\r\nexport default withRouter(UpdateListing);","//export const checkAuthentication = 'http://localhost/shopping/backend/public/checkAuth';\r\n\r\nexport const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nexport const zipAPIKey = 'M6tAgLr5jvPCTiPx9WHDUfQCwrWICFpybdfCuKU8JdrQIahwQWkFYELI81uw01k7';"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;AAEA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAjGA;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAjFA;AA4FA;AACA;AACA;AACA;AACA;AA3MA;AACA;AA+PA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;AArbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAwYA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AADA;AADA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAlBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAFA;AACA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;;;;AAhvBA;AACA;AAkvBA;;;;;;;;;;;;;;;;;AC7vBA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}